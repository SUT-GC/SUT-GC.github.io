I"ьш<ul class="toc" id="markdown-toc">
  <li><a href="#heading-kotlin-Е┬├Д╨╚-Г╛■Х╝╟Д╨▄" id="markdown-toc-heading-kotlin-Е┬├Д╨╚-Г╛■Х╝╟Д╨▄">Kotlin Е┬├Д╨╚ Г╛■Х╝╟О╪┬Д╨▄О╪┴</a>    <ul>
      <li><a href="#heading-class--object" id="markdown-toc-heading-class--object">Class &amp; Object</a>        <ul>
          <li><a href="#heading-Ф·└И─═Е┤╫Ф∙╟" id="markdown-toc-heading-Ф·└И─═Е┤╫Ф∙╟">Ф·└И─═Е┤╫Ф∙╟</a></li>
          <li><a href="#heading-Е╠·Ф─╖Е▓▄Ф√╧ФЁ∙" id="markdown-toc-heading-Е╠·Ф─╖Е▓▄Ф√╧ФЁ∙">Е╠·Ф─╖Е▓▄Ф√╧ФЁ∙</a></li>
          <li><a href="#heading-Ф▌╔Е▐ё" id="markdown-toc-heading-Ф▌╔Е▐ё">Ф▌╔Е▐ё</a></li>
          <li><a href="#heading-Ф┼╫Х╠║Г╠╩" id="markdown-toc-heading-Ф┼╫Х╠║Г╠╩">Ф┼╫Х╠║Г╠╩</a></li>
          <li><a href="#heading-Ф∙╟Ф█╝Г╠╩" id="markdown-toc-heading-Ф∙╟Ф█╝Г╠╩">Ф∙╟Ф█╝Г╠╩</a></li>
          <li><a href="#heading-Е╣▄Е╔≈Г╠╩" id="markdown-toc-heading-Е╣▄Е╔≈Г╠╩">Е╣▄Е╔≈Г╠╩</a></li>
          <li><a href="#heading-Е├┘И┐╗Г╠╩" id="markdown-toc-heading-Е├┘И┐╗Г╠╩">Е├┘И┐╗Г╠╩</a></li>
          <li><a href="#heading-Ф· Д╦╬Г╠╩" id="markdown-toc-heading-Ф· Д╦╬Г╠╩">Ф· Д╦╬Г╠╩</a></li>
          <li><a href="#heading-Д╪╢Г■÷Е╞╧Х╠║" id="markdown-toc-heading-Д╪╢Г■÷Е╞╧Х╠║">Д╪╢Г■÷Е╞╧Х╠║</a></li>
          <li><a href="#heading-Е█∙Д╬▀Г╠╩" id="markdown-toc-heading-Е█∙Д╬▀Г╠╩">Е█∙Д╬▀Г╠╩</a></li>
          <li><a href="#heading-Г╩╖Ф┴©" id="markdown-toc-heading-Г╩╖Ф┴©">Г╩╖Ф┴©</a></li>
          <li><a href="#heading-Г╩└Е░┬" id="markdown-toc-heading-Г╩└Е░┬">Г╩└Е░┬</a></li>
          <li><a href="#heading-Е╖■Ф┴≤" id="markdown-toc-heading-Е╖■Ф┴≤">Е╖■Ф┴≤</a></li>
          <li><a href="#heading-Г╩╖Ф┴©Г╩└Е░┬Е╖■Ф┴≤" id="markdown-toc-heading-Г╩╖Ф┴©Г╩└Е░┬Е╖■Ф┴≤">Г╩╖Ф┴©О╪▄Г╩└Е░┬О╪▄Е╖■Ф┴≤</a></li>
        </ul>
      </li>
      <li><a href="#heading-ФЁ⌡Е·▀" id="markdown-toc-heading-ФЁ⌡Е·▀">ФЁ⌡Е·▀</a>        <ul>
          <li><a href="#heading-Д╦╨Д╩─Д╧┬Х╕│Е╜≤Е°╗Г╠╩Е·▀Ф⌠╕И≥╓" id="markdown-toc-heading-Д╦╨Д╩─Д╧┬Х╕│Е╜≤Е°╗Г╠╩Е·▀Ф⌠╕И≥╓">Д╦╨Д╩─Д╧┬Х╕│Е╜≤Е°╗Г╠╩Е·▀Ф⌠╕И≥╓</a></li>
          <li><a href="#heading-Е╝╧Е≥╗Г╠╩Г └Е█▐Е▐≤Д╦▌И─├Е▐≤" id="markdown-toc-heading-Е╝╧Е≥╗Г╠╩Г └Е█▐Е▐≤Д╦▌И─├Е▐≤">Е╝╧Е≥╗Г╠╩Г └Е█▐Е▐≤Д╦▌И─├Е▐≤</a></li>
        </ul>
      </li>
      <li><a href="#heading-ФЁ╗Х╖ё--Е▐█Е╟└" id="markdown-toc-heading-ФЁ╗Х╖ё--Е▐█Е╟└">ФЁ╗Х╖ё &amp; Е▐█Е╟└</a>        <ul>
          <li><a href="#heading-ФЁ╗Х╖ё" id="markdown-toc-heading-ФЁ╗Х╖ё">ФЁ╗Х╖ё</a></li>
          <li><a href="#heading-Е▐█Е╟└" id="markdown-toc-heading-Е▐█Е╟└">Е▐█Е╟└</a></li>
        </ul>
      </li>
      <li><a href="#heading-Ф─╩Г╩⌠" id="markdown-toc-heading-Ф─╩Г╩⌠">Ф─╩Г╩⌠</a></li>
    </ul>
  </li>
</ul>

<h1 id="heading-kotlin-Е┬├Д╨╚-Г╛■Х╝╟Д╨▄">Kotlin Е┬├Д╨╚ Г╛■Х╝╟О╪┬Д╨▄О╪┴</h1>

<p>Д╦┼Ф╛║О╪▄Ф┬▒Д╩╛Е╞╧kotlinХ©⌡Х║▄Д╨├Ф∙╢Д╫⌠Г └Д╩▀Г╩█О╪▄Е╧╤Д╦■Е╞╧kotlinЕ÷╨Ф°╛Г └Х╞╜ФЁ∙Е╕┌Е▐≤И┤▐О╪▄Е┤╫Ф∙╟Г╜┴И┐╫Ф°┴Д╨├Е╓╖Х┤╢Г └Д╨├Х╖ёО╪▄Х©≥Ф╛║Ф┬▒Д╩╛Е╟├Д╪ Д╨├Х╖ёД╦▀kotlinЕ╞╧Г╠╩Д╦▌Е╞╧Х╠║Г └Ф■╞Ф▄│О╪▄kotlinФ≤╞Е╕┌Д╫∙Д╫©Г■╗ФЁ╗Х╖ёО╪▄Е▐█Е╟└Г╜┴Г⌡╦Е┘ЁЕ╥╔Е┘╥Г └Ц─┌</p>

<h2 id="heading-class--object">Class &amp; Object</h2>

<h3 id="heading-Ф·└И─═Е┤╫Ф∙╟">Ф·└И─═Е┤╫Ф∙╟</h3>

<p>Е°╗kotlinД╦╜О╪▄Ф┬▒Д╩╛Е╝ Д╧┴Г╠╩Ф≤╞И²·Е╦╦Ф√╧Д╬©Г └</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">final</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="k">public</span> <span class="k">constructor</span><span class="p">(</span><span class="n">name</span><span class="p">:</span> <span class="nc">String</span><span class="p">,</span> <span class="n">address</span><span class="p">:</span> <span class="nc">String</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">init</span> <span class="p">{</span>
        <span class="kd">val</span> <span class="py">name</span> <span class="p">=</span> <span class="n">name</span>
    <span class="p">}</span>
    <span class="kd">val</span> <span class="py">address</span> <span class="p">=</span> <span class="n">address</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>Е°╗kotlinД╦╜О╪▄classФ┬√interface И╩≤Х╝╓Ф≤╞finalГ╠╩Е·▀Г └О╪▄Е█ЁД╦█Е▐╞Д╩╔Х╒╚Г╩╖Ф┴©Ф┬√Е╝·Г▌╟Г └</li>
  <li>kotlinД╦╜О╪▄Ф·└И─═Е┤╫Ф∙╟Е▐╞Д╩╔Е╜≤Е°╗Д╦─Д╦╙Д╦╩Ф·└И─═Е┤╫Ф∙╟Е▓▄Е╓ Д╦╙Ф╛║Ф·└И─═Е┤╫Ф∙╟О╪▄Е╕┌Ф·°Г╠╩Д╦╜Е╜≤Е°╗Д╦╩Ф·└И─═Е┤╫Ф∙╟О╪▄Е┬≥Ф╛║Ф·└И─═Е┤╫Ф∙╟Е©┘И║╩Г⌡╢Ф▌╔Ф┬√Х─┘И≈╢Ф▌╔Г └Е╖■Ф┴≤Г╩≥Д╦╩Ф·└И─═Е┤╫Ф∙╟</li>
  <li>Д╦╩Ф·└И─═Е┤╫Ф∙╟Д╦╜Г └Е▐┌Ф∙╟Е▐╙Х┐╫Г■╗Е°╗Е┬²Е╖▀Е▄√Е²≈<code class="language-plaintext highlighter-rouge">init</code>Е▓▄Г╠╩Д╫⌠Д╦╜</li>
  <li>Е╕┌Ф·°Д╦─Д╦╙Г╠╩Ф╡║Ф°┴Её╟Ф≤▌Д╦╩Ф·└И─═Е┤╫Ф∙╟Ф╢╩Г²─Ф╛║Ф·└И─═Е┤╫Ф∙╟О╪▄Е╟├Д╪ И╩≤Х╝╓Ф▐░Д╬⌡Д╦─Д╦╙Д╦█Е╦╕Е▐┌Ф∙╟Г └Д╦╩Ф·└И─═Е┤╫Ф∙╟</li>
  <li>Е╕┌Ф·°Е°╗Д╦╩Ф·└И─═Е┤╫Ф∙╟Д╦┼Е╜≤Е°╗Ф▐▐Х©╟Г╛╕О╪▄Е╟├Е©┘И║╩Ф≤╬Г╓╨Е├≥Е┤╨<code class="language-plaintext highlighter-rouge">constructor</code>Е┘ЁИ■╝Е╜≈</li>
  <li>Г╠╩Г └Ф·└И─═Е┤╫Ф∙╟И╩≤Х╝╓Ф≤╞publicД©╝И╔╟Г └</li>
  <li>Е╕┌Ф·°Д╦╩Ф·└И─═Е┤╫Ф∙╟Д╦╜Её╟Ф≤▌Г └Е▐┌Ф∙╟Д╫©Г■╗<code class="language-plaintext highlighter-rouge">var / val</code>Е┘ЁИ■╝Е╜≈О╪▄Е┬≥Х╞╔Е▐┌Ф∙╟Е╟├Ф┬░Д╦╨Х╞╔Г╠╩Г └Е╠·Ф─╖</li>
</ul>

<p>Г╩▐Х©┤Д╦┼И²╒Е┤═Г┌╧О╪▄Ф┬▒Д╩╛Е▐╞Д╩╔Е╟├Х©≥Д╦╙<code class="language-plaintext highlighter-rouge">Demo</code>Г╠╩Ф■╧Е├≥Ф┬░П÷▒┤Д╩ёГ═│</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Demo</span><span class="p">(</span><span class="kd">val</span> <span class="py">name</span><span class="p">:</span> <span class="nc">String</span><span class="p">,</span> <span class="kd">val</span> <span class="py">address</span><span class="p">:</span> <span class="nc">String</span><span class="p">)</span>
</code></pre></div></div>

<p>Б ═О╦▐ Ф╛║Ф·└И─═Е┤╫Ф∙╟Г └Е▐┌Ф∙╟Д╦█Е┘│Х╝╦Г■╗ <code class="language-plaintext highlighter-rouge">val / var</code> Е┘ЁИ■╝Е╜≈Ф▐▐Х©╟, Е⌡═Д╦╨Е▐╙Ф≤╞Е·▀Е▐┌, Е╕┌П÷▒┤Д╩ёГ═│Ф≤╞И■≥Х╞╞Г └</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Demo</span><span class="p">{</span>
    <span class="k">constructor</span><span class="p">(</span><span class="kd">val</span> <span class="py">name</span><span class="p">:</span><span class="nc">String</span><span class="p">){</span> <span class="c1">//Х©≥Ф≤╞Ф╛║Ф·└И─═Е┤╫Ф∙╟О╪▄Ф╛║Ф·└И─═Е┤╫Ф∙╟Д╧÷Х╕│Г■╗constructorЕ┘ЁИ■╝Е╜≈</span>
        <span class="c1">// Г╪√Х╞▒И■≥Х╞╞О╪▄Д╦█Е▐╞Д╩╔Г■╗`val`</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Е┬⌡Е╩╨Г╠╩Г └Е╝·Д╬▀ <code class="language-plaintext highlighter-rouge">val demo = Demo("gc","china")</code> kotlin Е▌╩Ф▌┴Д╨├new Е┘ЁИ■╝Е╜≈</p>

<h3 id="heading-Е╠·Ф─╖Е▓▄Ф√╧ФЁ∙">Е╠·Ф─╖Е▓▄Ф√╧ФЁ∙</h3>

<p>Д╦▌javaД╦─Ф═╥О╪▄Ф┬▒Д╩╛Е▐╞Д╩╔Е°╗Г╠╩Д╦╜Е╝ Д╧┴Ф√╧ФЁ∙Е▓▄Е╠·Ф─╖О╪▄Е░▄Ф≈╤Д╩√Д╩╛И┐╫Ф≤╞И╩≤Х╝╓finalЕ┘ЁИ■╝Е╜≈Ф▐▐Х©╟Г └О╪▄Е█ЁД╦█Е▐╞Г╩╖Ф┴©Г └</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Demo</span><span class="p">(</span><span class="n">name</span><span class="p">:</span> <span class="nc">String</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">final</span> <span class="kd">val</span> <span class="py">name</span> <span class="p">=</span> <span class="n">name</span> <span class="c1">// Е▐╞Д╩╔Д╦█Е├≥final</span>
    <span class="k">final</span> <span class="k">fun</span> <span class="nf">function</span><span class="p">():</span> <span class="nc">String</span> <span class="p">=</span> <span class="n">name</span> <span class="c1">// Е▐╞Д╩╔Д╦█Е├≥final</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Д╦▌javaД╦█Д╦─Ф═╥Г └Ф≤╞О╪▄kotlinД╦╨Ф┬▒Д╩╛И╩≤Х╝╓Ф▐░Д╬⌡Е╠·Ф─╖Г └getter,setter</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">val</span> <span class="py">demo</span> <span class="p">=</span> <span class="nc">Demo</span><span class="p">(</span><span class="s">"gc"</span><span class="p">)</span>
<span class="n">demo</span><span class="p">.</span><span class="n">name</span> <span class="c1">// Е█ЁИ╩≤Х╝╓Х╟┐Г■╗getter</span>
</code></pre></div></div>

<p>Е╫⌠Г└╤О╪▄Ф┬▒Д╩╛Е▐╞Д╩╔Д╦╨Е╠·Ф─╖Х┤╙Е╝ Д╧┴getter, setter <em>val Е╝ Д╧┴Г └Е╠·Ф─╖Д╦█Е┘│Х╝╦Х┤╙Е╝ Д╧┴setterФ√╧ФЁ∙</em></p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Demo</span><span class="p">(</span><span class="n">name</span><span class="p">:</span> <span class="nc">String</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="py">name</span><span class="p">:</span> <span class="nc">String</span> <span class="p">=</span> <span class="n">name</span>
        <span class="k">get</span><span class="p">()</span> <span class="p">=</span> <span class="s">"hello ${field}"</span>
        <span class="k">set</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">field</span> <span class="p">=</span> <span class="s">"hello ${value}"</span>
        <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Х©≥И┤▄Х╕│ФЁ╗Ф└▐Е┤═Д╦╙Е°╟Ф√╧:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">field</code> Х╒╚Г╖╟Д╦╨Х╞╔Е╠·Ф─╖Г └Е╧∙Е░▌Е╜≈Ф╝╣О╪▄Д╦╨Д╩─Д╧┬Ф┬▒Д╩╛Е°╗getФ√╧ФЁ∙Д╦╜Х©■Е⌡·Г └Ф≤╞<code class="language-plaintext highlighter-rouge">field</code>Х─▄Д╦█Ф≤╞<code class="language-plaintext highlighter-rouge">name</code>Е▒╒О╪÷Е⌡═Д╦╨Е╕┌Ф·°Ф┬▒Д╩╛Х©■Е⌡·<code class="language-plaintext highlighter-rouge">name</code>О╪▄Е┬≥Е▐┬Д╪ Х╟┐Г■╗<code class="language-plaintext highlighter-rouge">name</code>Е╠·Ф─╖Г └getФ√╧ФЁ∙О╪▄Е╕┌Ф╜╓И─▓Е╫▓Е┬╟Ф═┬Ф╨╒Е┤╨О╪▄<code class="language-plaintext highlighter-rouge">field</code>Д╩┘Д╩┘Ф≤╞Е╜≤Е┌╗<code class="language-plaintext highlighter-rouge">name</code>Г └Е─╪О╪▄Д╦█Е▄┘Хё┘get/set</li>
  <li>setД╦╜Г └valueЕ▐┌Ф∙╟Ф≤╞Х┤╙Е╝ Д╧┴Г └О╪▄Д╦█Х©┤И─ Е╦╦Г■╗<code class="language-plaintext highlighter-rouge">value</code> О╪▄ setД╦╜Е▐┌Ф∙╟Ф╡║Ф°┴Г╠╩Е·▀О╪▄getД╦╜Ф╡║Ф°┴Х©■Е⌡·Е─╪О╪▄Е⌡═Д╦╨Х©≥Д╨⌡И┐╫Е▐╞Д╩╔Е°╗Е╠·Ф─╖Д╦┼Е╬≈Г÷╔</li>
</ul>

<h3 id="heading-Ф▌╔Е▐ё">Ф▌╔Е▐ё</h3>

<p>kotlin Д╦╜Г └Ф▌╔Е▐ёД╦▌javaГ⌡╦Д╪╪О╪▄Д╦█Х©┤kotlinД╦╜Ф▐░Д╬⌡Д╨├Ф⌡╢Д╦╟Е╞▄Г └Ф▌╔Е▐ёЕ┼÷Х┐╫О╪▄Е╝┐Е┘│Х╝╦Ф▌╔Е▐ёЕ╝ Д╧┴Е╠·Ф─╖О╪▄Д╫├Ф▌╔Е▐ёД╦╜Г └Е╠·Ф─╖Д╦█Х┐╫Д©²Е╜≤Г┼╤Ф─│О╪▄Д╧÷Д╦█Е╨■Х╞╔Д©²Е╜≤Г┼╤Ф─│О╪▄Ф┴─Д╩╔Ф▌╔Е▐ёД╦╜Г └Е╠·Ф─╖Д╦█Х┐╫Е┬²Е╖▀Е▄√Д╦■Д╦█Х┐╫Д╫©Г■╗<code class="language-plaintext highlighter-rouge">Х┐▄Е░▌Е╜≈Ф╝╣</code></p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">interface</span> <span class="nc">Demo</span> <span class="p">{</span>
    <span class="kd">val</span> <span class="py">name</span><span class="p">:</span> <span class="nc">String</span>

    <span class="kd">val</span> <span class="py">address</span><span class="p">:</span> <span class="nc">String</span>
        <span class="k">get</span><span class="p">()</span> <span class="p">=</span> <span class="s">"hello"</span>

    <span class="k">fun</span> <span class="nf">function1</span><span class="p">():</span> <span class="nc">String</span> <span class="p">{</span>
        <span class="k">return</span> <span class="n">address</span>
    <span class="p">}</span>

    <span class="k">fun</span> <span class="nf">function2</span><span class="p">()</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="heading-Ф┼╫Х╠║Г╠╩">Ф┼╫Х╠║Г╠╩</h3>

<p>kotlinД╦╜Г └Ф┼╫Х╠║Г╠╩Д╦▌javaД╦─Х┤╢</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">abstract</span> <span class="kd">class</span> <span class="nc">DemoII</span> <span class="p">{</span>
    <span class="c1">// Д╦▌javaД╦─Х┤╢</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="heading-Ф∙╟Ф█╝Г╠╩">Ф∙╟Ф█╝Г╠╩</h3>

<p>kotlin Ф▐░Д╬⌡Д╨├Ф∙╟Ф█╝Г╠╩Г └Ф╕┌Е©╣О╪▄Г╝─Е▄√Д╩ёГ═│(Д╦▌javaД╦╜@DataГ └Д╫°Г■╗Д╦─Х┤╢)</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">data class</span> <span class="nc">Demo</span><span class="p">(</span><span class="kd">val</span> <span class="py">name</span><span class="p">:</span> <span class="nc">String</span><span class="p">,</span> <span class="kd">val</span> <span class="py">address</span><span class="p">:</span> <span class="nc">String</span><span class="p">)</span>

<span class="k">fun</span> <span class="nf">main</span><span class="p">(</span><span class="n">args</span><span class="p">:</span> <span class="nc">Array</span><span class="p">&lt;</span><span class="nc">String</span><span class="p">&gt;)</span> <span class="p">{</span>
    <span class="kd">val</span> <span class="py">demo</span> <span class="p">=</span> <span class="nc">Demo</span><span class="p">(</span><span class="s">"gc"</span><span class="p">,</span> <span class="s">"china"</span><span class="p">)</span>
    <span class="c1">//Г■÷Ф┬░toString</span>
    <span class="nf">println</span><span class="p">(</span><span class="n">demo</span><span class="p">.</span><span class="nf">toString</span><span class="p">())</span>
    <span class="c1">//Г■÷Ф┬░component</span>
    <span class="kd">val</span> <span class="p">(</span><span class="py">name</span><span class="p">,</span> <span class="py">address</span><span class="p">)</span> <span class="p">=</span> <span class="n">demo</span>
    <span class="nf">println</span><span class="p">(</span><span class="s">"name: ${name}, address: ${address}"</span><span class="p">)</span>
    <span class="c1">//Г■÷Ф┬░copy Ф╥╠Е╨╕Ф▀╥Х╢²</span>
    <span class="kd">val</span> <span class="py">demoI</span> <span class="p">=</span> <span class="n">demo</span><span class="p">.</span><span class="nf">copy</span><span class="p">(</span><span class="n">name</span> <span class="p">=</span> <span class="s">"gc2"</span><span class="p">)</span>
    <span class="nf">println</span><span class="p">(</span><span class="n">demoI</span><span class="p">.</span><span class="nf">toString</span><span class="p">())</span>
<span class="p">}</span>

<span class="cm">/* out
Demo(name=gc, address=china)
name: gc, address: china
Demo(name=gc2, address=china)
*/</span>
</code></pre></div></div>

<h3 id="heading-Е╣▄Е╔≈Г╠╩">Е╣▄Е╔≈Г╠╩</h3>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Demo</span><span class="p">{</span>
    <span class="k">private</span> <span class="kd">val</span> <span class="py">name</span><span class="p">:</span><span class="nc">String</span> <span class="p">=</span> <span class="s">"gc"</span>
    <span class="kd">class</span> <span class="nc">Demo1</span><span class="p">{</span>
        <span class="nf">println</span><span class="p">(</span><span class="n">name</span><span class="p">)</span> <span class="c1">//ERROR</span>
        <span class="k">fun</span> <span class="nf">foo</span><span class="p">()</span> <span class="p">=</span> <span class="s">"gc"</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">val</span> <span class="py">demo1</span> <span class="p">=</span> <span class="nc">Demo</span><span class="p">.</span><span class="nc">Demo1</span><span class="p">().</span><span class="nf">foo</span><span class="p">()</span>
</code></pre></div></div>

<p>Е╣▄Е╔≈Г╠╩Д╦╜О╪▄И┤▄И²╒Г └Г╠╩Д╦█Е▐╞Д╩╔Х╝©И≈╝Е╓√И²╒Г └Е▐≤И┤▐Ф┬√Ф√╧ФЁ∙</p>

<h3 id="heading-Е├┘И┐╗Г╠╩">Е├┘И┐╗Г╠╩</h3>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Demo</span><span class="p">{</span>
    <span class="k">private</span> <span class="kd">val</span> <span class="py">name</span><span class="p">:</span><span class="nc">String</span> <span class="p">=</span> <span class="s">"gc"</span>
    <span class="k">inner</span> <span class="kd">class</span> <span class="nc">Demo1</span><span class="p">{</span>
        <span class="nf">println</span><span class="p">(</span><span class="n">name</span><span class="p">)</span> <span class="c1">//ok</span>
        <span class="k">fun</span> <span class="nf">foo</span><span class="p">()</span> <span class="p">=</span> <span class="s">"gc"</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">val</span> <span class="py">demo1</span> <span class="p">=</span> <span class="nc">Demo</span><span class="p">().</span><span class="nc">Demo1</span><span class="p">().</span><span class="nf">foo</span><span class="p">()</span> <span class="c1">//Х©≥И┤▄Д╦▌Е╣▄Е╔≈Г╠╩Д╧÷Д╦█Д╦─Ф═╥</span>
</code></pre></div></div>

<h3 id="heading-Ф· Д╦╬Г╠╩">Ф· Д╦╬Г╠╩</h3>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">enum</span> <span class="kd">class</span> <span class="nc">Demo</span><span class="p">(</span><span class="kd">val</span> <span class="py">name</span><span class="p">:</span><span class="nc">String</span><span class="p">){</span>
    <span class="nc">GC</span><span class="p">(</span><span class="s">"gc"</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="heading-Д╪╢Г■÷Е╞╧Х╠║">Д╪╢Г■÷Е╞╧Х╠║</h3>

<p>Е⌡═Д╦╨kotlinД╦╜Ф╡║Ф°┴staticЕ┘ЁИ■╝Е╜≈, Е╕┌Ф·°Ф┐ЁХ╕│Е╝·Г▌╟Е╞╧Е╨■Г └Ф∙┬Ф·°О╪▄Е▐╞Д╩╔Д╫©Г■╗Е█┼Г■÷Е╞╧Х╠║О╪▄Е┬²Е╖▀Е▄√Ф≈╤Ф°╨Д╧÷Д╦▌staticД╦─Х┤╢</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Demo</span><span class="p">{</span>
    <span class="k">companion</span> <span class="k">object</span> <span class="nc">Factory</span><span class="p">{</span> <span class="c1">//Е▐╞Д╩╔Г°│Г∙╔Е╞╧Х╠║Е░█ Factory</span>
        <span class="k">fun</span> <span class="nf">create</span><span class="p">():</span> <span class="nc">Demo</span> <span class="p">=</span> <span class="nc">Demo</span><span class="p">()</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// val demo = Demo.create()</span>
</code></pre></div></div>

<h3 id="heading-Е█∙Д╬▀Г╠╩">Е█∙Д╬▀Г╠╩</h3>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">object</span> <span class="nc">DemoUtil</span> <span class="p">{</span>
    <span class="k">fun</span> <span class="nf">isValidId</span><span class="p">(</span><span class="n">id</span><span class="p">:</span> <span class="nc">Long</span><span class="p">?)</span> <span class="p">=</span> <span class="n">id</span><span class="o">?.</span><span class="nf">let</span> <span class="p">{</span> <span class="n">id</span> <span class="p">&gt;</span> <span class="mi">0</span> <span class="p">}</span> <span class="o">?:</span> <span class="k">false</span>
<span class="p">}</span>

<span class="c1">// DemoUtil.isValidId(10)</span>
</code></pre></div></div>

<p>Е°╗kotlinД╦╜О╪▄Х©≥Г╖█Е╝ Д╧┴Д╧÷Е▐╚Е│ Е╞╧Х╠║Её╟Ф≤▌О╪▄Е╫⌠Д╦■Д╩┘Е╫⌠Д╫©Г■╗Х©≥Д╦╙Е╞╧Х╠║Д╦╜Г └Ф√╧ФЁ∙Ф┬√Х─┘Е╠·Ф─╖Ф≈╤Е─≥Е┬²Е╖▀Е▄√О╪┬Е█∙Д╬▀Ф╗║Е╪▐Д╦╜Г └Ф┤▓Ф╠┴Ф╗║Е╪▐О╪┴</p>

<h3 id="heading-Г╩╖Ф┴©">Г╩╖Ф┴©</h3>

<p>kotlinД╦╜Г └Г╩╖Ф┴©Д╦▌javaФ°─Е╓╖Г └Е▄╨Е┬╚Ф≤╞ koltinФ■╞Ф▄│Е╓ Г╩╖Ф┴©</p>

<ul>
  <li>Е╕┌Ф·°Г┬╤Г╠╩Д╦╜Ф╡║Ф°┴Ф·└И─═Е┤╫Ф∙╟(Е▄┘Ф▀╛Д╦╩Ф·└И─═Е▓▄Ф╛║Ф·└И─═)О╪▄Е┬≥Е╜░Г╠╩Д╦╜Г╩╖Ф┴©Г └Ф≈╤Е─≥Х╟┐Г■╗Г┬╤Г╠╩Г └Г╘╨Ф·└И─═Е┤╫Ф∙╟</li>
</ul>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">open</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="p">{</span>
       
<span class="p">}</span>

<span class="kd">class</span> <span class="nc">DemoI</span> <span class="p">:</span> <span class="nc">Demo</span><span class="p">()</span> <span class="p">{</span>

<span class="p">}</span>
</code></pre></div></div>

<blockquote>
  <p>Е╫⌠Г└╤О╪▄Ф▌╔Е▐ёФ╡║Ф°┴Ф·└И─═Е┤╫Ф∙╟О╪▄Ф┴─Д╩╔Е▐╞Д╩╔Х©≥Д╧┬Е├≥</p>
</blockquote>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">interface</span> <span class="nc">Demo</span> <span class="p">{</span>

<span class="p">}</span>

<span class="kd">class</span> <span class="nc">DemoI</span> <span class="p">:</span> <span class="nc">Demo</span> <span class="p">{</span>

<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>Е╕┌Ф·°Г┬╤Г╠╩Д╦╜Е╜≤Е°╗Ф·└И─═Е┤╫Ф∙╟О╪▄Д╦■Е╜░Г╠╩Д╦╜Д╦█Е╜≤Е°╗Д╦╩Ф·└И─═Е┤╫Ф∙╟О╪▄Е┬≥Ф╛║Ф·└И─═Е┤╫Ф∙╟Е©┘И║╩Ф≤╬Г╓╨Д╫©Г■╗<code class="language-plaintext highlighter-rouge">super</code>Е┘ЁИ■╝Е╜≈</li>
</ul>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Demo</span><span class="p">(</span><span class="n">name</span><span class="p">:</span><span class="nc">String</span><span class="p">){</span>

<span class="p">}</span>

<span class="kd">class</span> <span class="nc">DemoI</span> <span class="p">:</span> <span class="nc">Demo</span><span class="p">{</span>
    <span class="k">constructor</span><span class="p">(</span><span class="n">name</span><span class="p">:</span><span class="nc">String</span><span class="p">,</span> <span class="n">address</span><span class="p">:</span><span class="nc">String</span><span class="p">)</span> <span class="p">:</span> <span class="k">super</span><span class="p">(</span><span class="n">name</span><span class="p">){</span>

    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>Е╜░Г╠╩Х╕├Г⌡√Г┬╤Г╠╩Д╦╜Г └Ф√╧ФЁ∙Е©┘И║╩Г■╗ <code class="language-plaintext highlighter-rouge">override</code>  Е┘ЁИ■╝Е╜≈Ф≤╬Г╓╨Её╟Ф≤▌</li>
</ul>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">open</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="p">{</span>
    <span class="k">open</span> <span class="k">fun</span> <span class="nf">function</span><span class="p">()</span> <span class="p">=</span> <span class="s">"hello world"</span>
<span class="p">}</span>

<span class="kd">class</span> <span class="nc">DemoI</span> <span class="p">:</span> <span class="nc">Demo</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">override</span> <span class="k">fun</span> <span class="nf">function</span><span class="p">()</span> <span class="p">=</span> <span class="s">"hahaha"</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>
    <p>Е╠·Ф─╖Д╦▌Ф√╧ФЁ∙ Е░▄Ф═╥Е▐╞Д╩╔Х╒╚Г╩╖Ф┴©О╪▄ Д╫├Х╕│ФЁ╗Ф└▐Г └Ф≤╞ Д╦─Д╦╙ val Ф═┤ФЁ╗Г └Е╠·Ф─╖Д╦█Е▐╞Д╩╔Х╒╚ var Ф═┤ФЁ╗Г └Е╠·Ф─╖И┤█Е├≥О╪▄Е▐█Д╧▀Е▐╞Д╩╔</p>
  </li>
  <li>
    <p>kotlin Д╦╜Е╓ Г╩╖Ф┴©Ф≤╞Х╒╚Е┘│Х╝╦Г └О╪▄Е╕┌Ф·°Ф┐ЁХ╕│Х╟┐Г■╗Ф÷░Д╦─Г┬╤Г╠╩Ф▄┤Е╝ Г └Ф√╧ФЁ∙О╪▄Е▐╞Д╩╔Д╫©Г■╗super&lt;*&gt; Е┘ЁИ■╝Е╜≈</p>
  </li>
</ul>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">open</span> <span class="kd">class</span> <span class="nc">DemoI</span> <span class="p">{</span>
    <span class="k">open</span> <span class="k">fun</span> <span class="nf">function</span><span class="p">()</span> <span class="p">=</span> <span class="s">"hello world"</span>
<span class="p">}</span>

<span class="k">open</span> <span class="kd">class</span> <span class="nc">DemoII</span> <span class="p">{</span>
    <span class="k">open</span> <span class="k">fun</span> <span class="nf">function</span><span class="p">()</span> <span class="p">=</span> <span class="s">"hello china"</span>
<span class="p">}</span>

<span class="kd">class</span> <span class="nc">Demo</span> <span class="p">:</span> <span class="nc">DemoI</span><span class="p">(),</span> <span class="nc">DemoII</span><span class="p">(){</span>
    <span class="k">override</span> <span class="k">fun</span> <span class="nf">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">super</span><span class="p">&lt;</span><span class="nc">DemoI</span><span class="p">&gt;.</span><span class="nf">function</span><span class="p">()</span> <span class="p">+</span> <span class="k">super</span><span class="p">&lt;</span><span class="nc">DemoII</span><span class="p">&gt;.</span><span class="nf">function</span><span class="p">()</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="heading-Г╩└Е░┬">Г╩└Е░┬</h3>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Demo</span> <span class="p">{</span>
    <span class="k">fun</span> <span class="nf">function</span><span class="p">(){</span>
        <span class="nf">println</span><span class="p">(</span><span class="s">"hello world"</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">class</span> <span class="nc">DemoI</span><span class="p">(</span><span class="kd">val</span> <span class="py">demo</span><span class="p">:</span><span class="nc">Demo</span><span class="p">){</span>
    <span class="k">fun</span> <span class="nf">function</span><span class="p">(){</span>
        <span class="n">demo</span><span class="p">.</span><span class="nf">function</span><span class="p">()</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="heading-Е╖■Ф┴≤">Е╖■Ф┴≤</h3>

<p>kotlin Е▌÷Её╟Ф■╞Ф▄│Г╠╩О╪▄Ф√╧ФЁ∙О╪▄Е╠·Ф─╖Е╖■Ф┴≤, Х©≥И┤▄Ф ┌Ф≈╤Е▐╙Д╪ Ф▐░Е┬╟Г╠╩Е╖■Ф┴≤</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">interface</span> <span class="nc">Projector</span> <span class="p">{</span>
    <span class="k">fun</span> <span class="nf">show</span><span class="p">(</span><span class="n">content</span><span class="p">:</span><span class="nc">String</span><span class="p">)</span>
<span class="p">}</span>

<span class="kd">class</span> <span class="nc">SonyProjector</span><span class="p">:</span> <span class="nc">Projector</span> <span class="p">{</span>
    <span class="k">override</span> <span class="k">fun</span> <span class="nf">show</span><span class="p">(</span><span class="n">content</span><span class="p">:</span><span class="nc">String</span><span class="p">){</span>
        <span class="nf">println</span> <span class="p">(</span><span class="s">"sony show ${content}"</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">class</span> <span class="nc">Computor</span> <span class="p">(</span><span class="n">projector</span><span class="p">:</span> <span class="nc">Projector</span><span class="p">):</span> <span class="nc">Projector</span> <span class="k">by</span> <span class="n">projector</span> <span class="c1">// Х©≥И┤▄Е▐▒Г■÷Д╨├Е╖■Ф┴≤</span>

<span class="k">fun</span> <span class="nf">main</span><span class="p">(</span><span class="n">args</span><span class="p">:</span> <span class="nc">Array</span><span class="p">&lt;</span><span class="nc">String</span><span class="p">&gt;)</span> <span class="p">{</span>
    <span class="kd">val</span> <span class="py">sonyProjector</span><span class="p">:</span> <span class="nc">Projector</span> <span class="p">=</span> <span class="nc">SonyProjector</span><span class="p">()</span>
    <span class="kd">val</span> <span class="py">computor</span><span class="p">:</span> <span class="nc">Computor</span> <span class="p">=</span> <span class="nc">Computor</span><span class="p">(</span><span class="n">sonyProjector</span><span class="p">)</span>
    <span class="n">computor</span><span class="p">.</span><span class="nf">show</span><span class="p">(</span><span class="s">"hello worlds"</span><span class="p">)</span>

    <span class="nf">println</span><span class="p">(</span><span class="nc">Computor</span><span class="o">::</span><span class="k">class</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="heading-Г╩╖Ф┴©Г╩└Е░┬Е╖■Ф┴≤">Г╩╖Ф┴©О╪▄Г╩└Е░┬О╪▄Е╖■Ф┴≤</h3>

<p>Е╞╧Д╨▌Х©≥Д╦┴Г╖█Г╠╩Д╦▌Г╠╩Д╧▀И≈╢Г └Г╩└Хё┘Е╫╒Е╪▐О╪▄Г╫▒Д╦┼Ф°┴Е╬┬Е╓ Д╨╨Е▌╩Д╨┴Х╬╘Е⌠╙Д╦╙Ф⌡╢Д╪≤Д╨▌Е⌠╙Д╦╙О╪▄Ф┬▒Д╦╙Д╨╨Х╝╓Д╦╨Д╦┴Х─┘Д╧▀И≈╢Ф╡║Ф°┴Д╪≤Е┼ёО╪▄Д╩┘Д╩┘Ф≤╞Е°╨Ф≥╞Д╦█Е░▄Г └Д╨╖Г┴╘Ц─┌</p>

<p>Г╩╖Ф┴©Е╬┬Ф≤▌Ф≤╬Г └Е╜≤Е°╗Д╨▌Д╨╡Е╜░Д╧▀И≈╢Г └Е┘ЁГЁ╩О╪▄Ф╞■Е╕┌Г┬╤Д╨╡Е▓▄Е╜╘Е╜░О╪▄И╦÷Д╦▌И╨╩И⌡─Д╧▀И≈╢Г └Е┘ЁГЁ╩О╪▄Х©≥Г╖█Ф≤╞Ф≈═Х╝╨Ф≤╞Е┘╥Ф°┴Х║─Г╪≤Е┘ЁГЁ╩Г └Г⌡╢ГЁ╩Д╨╡Е╠·Х©≤Ф≤╞Г■÷Г┴╘Д╧▀И≈╢Г └Х©⌡Е▄√О╪▄И┐╫Е▐╞Д╩╔Г■╗Г╩╖Ф┴©Е┘ЁГЁ╩Ф▐▐Х©╟О╪⌡Г╩└Е░┬Е┬≥Е╪╨Х╟┐Г └Ф≤╞Ф∙╢Д╫⌠Д╦▌И┐╗Е┬├Г └Е┘ЁГЁ╩О╪▄Ф╞■Е╕┌Х╫╕Е▓▄Х╫╝Х┐▌О╪▄Х╫╕Е▓▄Х╫╕Е²░Г╜┴О╪▄Е╓╖Г┴╘Е⌠│Ф≤╞Г■╠Е╟▐Г┴╘Е⌠│Г╩└Хё┘Х╣╥Ф²╔Г └О╪▄Г■╗Г╩└Е░┬Г⌡╦Е╞╧Х╬┐Е╔╫О╪⌡Х─▄Е╖■Ф┴≤Е┬≥Ф⌡╢ФЁ╗И┤█Х║▄Д╦╨Д╦┼О╪▄Ф╞■Е╕┌Г■╣Х└▒Д╦▌Ф┼∙Е╫╠Д╩╙О╪▄Г■╣Х└▒Ф≤╞Д╦╙Д╫⌠О╪▄Ф┼∙Е╫╠Д╩╙Д╧÷Ф≤╞Д╦╙Д╫⌠О╪▄Д╦╓Д╦╙Ф≈╒Ф╡║Ф°┴Х©⌡Е▄√Е┘ЁГЁ╩О╪▄Д╧÷Ф╡║Ф°┴Г╩└Хё┘Е┘ЁГЁ╩О╪┬Е╧╤Д╦█Ф≤╞Г╪╨Д╨├Ф┼∙Е╫╠Д╩╙О╪▄Г■╣Х└▒Д╦█Х┐╫Е╥╔Д╫°О╪┴О╪▄Г■╣Х└▒Е▐╙Д╪ Ф┼┼Ф≤╬Г╓╨Д╩╩Е┼║Е╖■Ф┴≤Г╩≥Ф┼∙Е╫╠Д╩╙Ц─┌</p>

<p>Е┘╤Е╝·Д╩ёГ═│Д╦╜Г └Д╦√Г∙▄Д╦▌Д╨╨Г╠╩Д╦√Г∙▄Д╦─Ф═╥О╪▄Ф╞■Е╕┌Г╩╖Ф┴©О╪▄Г╩└Хё┘О╪▄Е╖■Ф┴≤О╪▄Ф╞■Е╕┌Е╥╔Е▌┌Ф╗║Е╪▐О╪▄Х╝╒И≤┘Х─┘Ф╗║Е╪▐О╪▄Х©≥Д╨⌡Ф≈═Д╦█Ф≤╞Е°╗Д╨╨Г╠╩Г╓╬Д╪ Х©⌡Е▄√Ф─╩Г╩⌠Е┤╨Ф²╔Ф°─Г╩┬Ф≤═Е╟└Е┬╟Д╩ёГ═│Д╦√Г∙▄Г └О╪▄ Ф┴─Д╩╔Х╞╢О╪▄Д╨╨Г╠╩Д╦√Г∙▄Д╦╜Г └Х╖└Е╬▀Е╕┌Ф·°Е╬┬Е╔╫Г └Е╨■Г■╗Е°╗Е├≥Д╩ёГ═│Д╦┼О╪▄Д╧÷Е╟╠Д╦█Г■╗Х╢╧Е╟╫Е©┐Ф°╨Г └Е▌╩Г═■Г╘╤Д╩─Д╧┬Х╖ёХ─╕Д╨├О╪▄Е⌡═Д╦╨Г▌╟Е°╗Х©≥Д╦╙Г╓╬Д╪ Д╬©Ф≤╞Ф°─Е╔╫Х╖ёХ─╕Г └Г╩⌠Ф·°Ц─┌</p>

<h2 id="heading-ФЁ⌡Е·▀">ФЁ⌡Е·▀</h2>

<p>koltin Е╞╧ФЁ⌡Е·▀Г └Ф■╞Ф▄│Ф╞■javaФ⌡╢Д╦╨Ф√╧Д╬©О╪▄Х≥╫Г└╤Д╦╓Х─┘Е╞╧ФЁ⌡Е·▀И┐╫Ф≤╞Е│ Г╠╩Е·▀Ф⌠╕И≥╓Ф⌠█Д╫°О╪▄Д╫├kotlinФ≈═Х╝╨Ф≤╞Е°╗Х╞╜ФЁ∙Д╦┼Х©≤Ф≤╞Е°╗Х╞╜Д╧┴Д╦┼И┐╫Ф╞■javaФ⌡╢Е┼═Д╨╨Ф─╖Е▄√</p>

<h3 id="heading-Д╦╨Д╩─Д╧┬Х╕│Е╜≤Е°╗Г╠╩Е·▀Ф⌠╕И≥╓">Д╦╨Д╩─Д╧┬Х╕│Е╜≤Е°╗Г╠╩Е·▀Ф⌠╕И≥╓</h3>

<p>Е▌÷Е⌡═Д╧÷Е▓▄Е╓╖Е╓ Ф∙╟Г └JavaХ╝╘Д╨╨Д╦█Г┬╫Г └Г┌╧Д╦─Ф═╥Б─■Б─■Е┘╪Е╝╧Ф─╖Ц─┌Г■╠Д╨▌ФЁ⌡Е·▀Е╧╤Д╦█Ф≤╞Д╩▌JavaХ╞·Г■÷Е╟╠Е╜≤Е°╗Г └Д╦─Д╦╙Г┴╧Ф─╖О╪▄Х─▄Ф≤╞Г╜┴Е┬╟SE5Ф┴█Х╒╚Е┼═Е┘╔Г └О╪▄Ф┴─Д╩╔Д╦╨Д╨├Е┘╪Е╝╧Д╧▀Е┴█Е╧╤Ф°╙Д╫©Г■╗ФЁ⌡Е·▀Г └Г╠╩Е╨⌠Е▓▄Д╩ёГ═│О╪▄Д╦█Е╬≈Д╦█Х╝╘Г╪√Х╞▒Е≥╗Ф⌠╕И≥╓Ф▌┴Д╩ёГ═│Д╦╜Ф°┴Е┘ЁД╨▌ФЁ⌡Е·▀Г╠╩Е·▀Д©║Ф│╞Г └И┐╗Е┬├О╪▄Х©≥Ф═╥Ф°─Е░▌Г■÷Ф┬░Е┤╨Ф²╔Г └Д╩ёГ═│Е┘╤Е╝·Ф≤╞Ц─▌ФЁ⌡Е·▀Ф≈═Е┘ЁЦ─▐Г └О╪▄Ф┬▒Д╩╛Д╫©Г■╗Е┬╚Д╨╨Г └Д╩ёГ═│Ф┬√Х─┘Г╠╩Е╨⌠Ф≈╤Д╧÷Е╟╠Д╦█И°─Х╕│Е┘ЁЕ©┐Е╞╧Ф√╧Д╩ёГ═│Ф≤╞Е░╕Е╥╡Г╩▐Ц─▌ФЁ⌡Е▄√Ц─▐О╪▄Е▐█Д╧▀Д╨╕Г└╤Ц─┌</p>

<p>Е°╗Г╪√Х╞▒Е≥╗Е╠┌И²╒Е│ Г └Х©≥Д╩╤Д╨▀О╪┬Ф⌠╕И≥╓Е┘╥Д╫⌠Г └Г╠╩Е·▀Д©║Ф│╞О╪┴О╪▄Д╫©Е╬≈JavaГ └ФЁ⌡Е·▀Е┘┬Е╓╘И┐╫Е╜≤Е°╗Д╦─Д╦╙Х╝╘Д╨╨И²·Е╦╦И ╬Е▐≈Г └Г╪╨Г┌╧О╪ </p>

<p><strong>Е°╗ФЁ⌡Е·▀Д╩ёГ═│Е├┘И┐╗О╪▄Ф≈═ФЁ∙Х▌╥Е╬≈Д╩╩Д╫∙Ф°┴Е┘ЁФЁ⌡Е·▀Е▐┌Ф∙╟Г╠╩Е·▀Г └Д©║Ф│╞</strong></p>

<h3 id="heading-Е╝╧Е≥╗Г╠╩Г └Е█▐Е▐≤Д╦▌И─├Е▐≤">Е╝╧Е≥╗Г╠╩Г └Е█▐Е▐≤Д╦▌И─├Е▐≤</h3>

<p>Ф≈═Х╝╨Ф≤╞Е°╗javaХ©≤Ф≤╞Е°╗kotlinД╦╜, <code class="language-plaintext highlighter-rouge">Object obj = new String("gc")</code> Ф≤╞Е░┬ФЁ∙Г └О╪▄Д╫├Ф≤╞<code class="language-plaintext highlighter-rouge">String str = new Object()</code> Ф≤╞И²·ФЁ∙Г └О╪▄Д╧÷Е╟╠Ф≤╞Х╞╢Г■╗Г┬╤Г╠╩Е▌╩Хё┘Е╜░Г╠╩Г └Е╝·Д╬▀Ф≤╞Ф╡║Ф°┴И≈╝И╒≤Г └О╪▄Д╫├Е▐█Д╧▀Е█╢Д╦█Х║▄Ц─┌Д╦■Х©≥Ф≤╞Е▐╞Д╩╔Х╒╚Г░├Х╖ёГ └Ц─┌</p>

<p>Е°╗javaД╦╜О╪▄ <code class="language-plaintext highlighter-rouge">ArrayList&lt;Object&gt; l = new ArrayList&lt;String&gt;()</code> Ф≤╞Д╦█Х╒╚Г╪√Х╞▒И─ Х©┤Г └О╪▄Е⌡═Д╦╨ ``ArrayList<object><code class="language-plaintext highlighter-rouge"> Е╧╤И²· </code>ArrayList<String>` Г └Г┬╤Г╠╩Ц─┌</String></object></p>

<p>Д╫├Х©≥Д╬©Д╦█Х╒╚Ф÷░Д╨⌡Д╨╨Г░├Х╖ёО╪▄ П÷▒┤Д╩ёГ═│Ф²╔Х║╗Ф≤▌Х©≥Д╦╨Д╩─Д╧┬Д╦█Х╒╚Е┘│Х╝╦:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="n">objects</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
<span class="k">for</span> <span class="o">(</span><span class="nc">Object</span> <span class="n">object</span> <span class="o">:</span> <span class="n">objects</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">object</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Integer</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>

<p>Е╕┌Ф·° <code class="language-plaintext highlighter-rouge">ArrayList&lt;Object&gt;</code> Ф≤╞ <code class="language-plaintext highlighter-rouge">ArrayList&lt;String&gt;</code> Г └Г┬╤Г╠╩О╪▄Е╟╠Д╪ Е┤╨Г▌╟Д╦┼И²╒Г └Д╩ёГ═│Х─▄Д╦■Х╒╚Г╪√Х╞▒И─ Х©┤О╪▄Х©≥Ф≤╞Е╬┬Е█╠И≥╘Г └Д╨▀Ф┐┘, Д╦■Д╦▌Ф∙╟Г╩└Е█▐Е▐≤И─═Ф┬░Г └Е█╠И≥╘Д╦─Ф═╥Е╓╖Ц─┌</p>

<p>Ф┴─Д╩╔Е°╗javaД╦╜О╪▄Ф┬▒Д╩╛Х╕│Х©≥Ф═╥Ф²╔Х╖ёЕ├ЁД╦┼И²╒Г └И≈╝И╒≤О╪▄ Д╫├Ф≤╞Х╕│Д╩╔Г┴╨Г┴╡Д©╝Ф■╧Е╝╧Е≥╗Е├┘Е╝╧Д╦╨Д╩ёД╩╥Ц─┌</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">ArrayList</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">objects</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
<span class="n">objects</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">(</span><span class="s">"gc"</span><span class="o">));</span> <span class="c1">// Е╞╧Е┘╤Е├≥Е┘╔Г └Ф≈╤Е─≥Е╪┌Е╦╦</span>
</code></pre></div></div>

<p>Е╕┌Ф·°Ф┐ЁХ╕│Д╦─Д╦╙Е╞╧Е╨■ Е├≥Ф⌠█Д╫° Г └Е█▐Е▐≤</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">ArrayList</span><span class="o">&lt;?</span> <span class="n">supper</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="n">objects</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;();</span>
<span class="n">objects</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">(</span><span class="s">"gc"</span><span class="o">));</span>
<span class="nc">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">objects</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span><span class="c1">// Д╫├Х╞╩Е█╢Е░▄Ф═╥Х╒╚Г┴╨Г┴╡</span>
</code></pre></div></div>

<p>Е⌡═Д╦╨javaГ └Г╠╩Е·▀Ф⌠╕И≥╓О╪▄javaЕ°╗Г╪√Х╞▒И≤╤Ф╝╣Е╞╧ФЁ⌡Е·▀Е│ Д╨├Е╪╨Ф°┴Е┼⌡Г └Ф═║И╙▄О╪▄Х─▄Х©≥Г╖█Ф═║И╙▄Е╞╪Х┤╢Ф┬▒Д╩╛Д╦█Е╬≈Д╦█Е┼═Е┘╔И─ И┘█Г╛╕Е╧╤Д╦■Г╛╕Е░┬Ф⌠█Д╫°Х╖└Ф═╪Ф²╔Х©⌡Х║▄Д╩ёГ═│Г╪√Е├≥</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">A</span><span class="o">&lt;</span><span class="no">T</span><span class="o">&gt;</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="no">T</span> <span class="n">l</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">A</span><span class="o">(</span><span class="no">T</span> <span class="n">l</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">l</span> <span class="o">=</span> <span class="n">l</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="no">T</span> <span class="nf">getContent</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">l</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="cm">/*
         * Х©≥И┤▄Ф┬▒Д╩╛Е├≥Г └Г╠╩Х≥╫Г└╤Е▐╙Х©⌡Х║▄Г └Х╞╩Ф⌠█Д╫°О╪▄Д╫├Ф≤╞Е°╗Х╟┐Г■╗Г └Ф≈╤Е─≥Д╧÷Д╦█Х┐╫Е╟├ A&lt;String&gt; И≥└Е─╪Г╩≥ A&lt;Object&gt;
         */</span>
        <span class="no">A</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="k">new</span> <span class="no">A</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;(</span><span class="s">"gc"</span><span class="o">);</span> 
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>Ф┬▒Д╩╛Г°▀Д╦▀kotlinГ └Д╩ёГ═│:</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">interface</span> <span class="nc">Source</span><span class="p">&lt;</span><span class="k">out</span> <span class="nc">T</span><span class="p">&gt;</span>

<span class="k">fun</span> <span class="nf">function</span><span class="p">(</span><span class="n">arg</span><span class="p">:</span> <span class="nc">Source</span><span class="p">&lt;</span><span class="nc">String</span><span class="p">&gt;)</span> <span class="p">{</span>
    <span class="kd">val</span> <span class="py">a</span> <span class="p">:</span> <span class="nc">Source</span><span class="p">&lt;</span><span class="nc">Any</span><span class="p">&gt;</span> <span class="p">=</span> <span class="n">arg</span>
<span class="p">}</span>
</code></pre></div></div>

<p>kotlin Е°╗ФЁ⌡Е·▀Д╦┼Е╞╧Д╨▌Г╠╩Е·▀Ф⌠╕И≥╓Г └Фё─Ф÷╔Д╦▌javaЕ│ Д╨├Д╦█Е░▄Ф√╧Е░▒Д╦┼Г └Е╓└Г░├О╪▄koltin Е▌╩И≥╓Д╨├ Е°╗Е╝ Д╧┴Е▐≤И┤▐Г └Ф≈╤Е─≥Д╫©Г■╗И─ И┘█Г╛╕ <code class="language-plaintext highlighter-rouge">?</code> Г └Ф√╧ФЁ∙О╪▄Е╒·Е┼═Д╨├Её╟Ф≤▌Е╓└ФЁ⌡Е·▀Г └Ф√╧ФЁ∙О╪▄Е╕┌Ф·°Е°╗Д╫©Г■╗Е°╗Е▐≤И┤▐Г └Ф≈╤Е─≥Д╩┘Д╩┘Ф≤╞Е╝┴Е┘╗Г └getФ⌠█Д╫°О╪▄И┌ёД╧┬Е▐╞Д╩╔Е°╗Ф■╧Е▐≤И┤▐Г └Её╟Ф≤▌Е╓└Е╒·Е┼═<code class="language-plaintext highlighter-rouge">out</code>Е┘ЁИ■╝Е╜≈Е╓└Г░├О╪▄Г■╠Ф╜╓Е╬≈Е┬╟Г └Е╔╫Е╓└Ф≤╞ <code class="language-plaintext highlighter-rouge">Source&lt;Any&gt;</code> Ф≤╞<code class="language-plaintext highlighter-rouge">Source&lt;String&gt;</code> Г └Г┬╤Г╠╩Ц─┌</p>

<h2 id="heading-ФЁ╗Х╖ё--Е▐█Е╟└">ФЁ╗Х╖ё &amp; Е▐█Е╟└</h2>

<h3 id="heading-ФЁ╗Х╖ё">ФЁ╗Х╖ё</h3>

<p>kotlin Д╦╜ФЁ╗Х╖ё Д╦▌ java ФЁ╗Х╖ё100%Е┘╪Е╝╧О╪▄ Х╞╜ФЁ∙Д╦┼Д╧÷Д╦─Х┤╢</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nd">@Target</span><span class="p">(</span><span class="nc">AnnotationTarget</span><span class="p">.</span><span class="nc">CLASS</span><span class="p">,</span> <span class="nc">AnnotationTarget</span><span class="p">.</span><span class="nc">FUNCTION</span><span class="p">,</span>
        <span class="nc">AnnotationTarget</span><span class="p">.</span><span class="nc">VALUE_PARAMETER</span><span class="p">,</span> <span class="nc">AnnotationTarget</span><span class="p">.</span><span class="nc">EXPRESSION</span><span class="p">)</span>
<span class="nd">@Retention</span><span class="p">(</span><span class="nc">AnnotationRetention</span><span class="p">.</span><span class="nc">SOURCE</span><span class="p">)</span>
<span class="nd">@MustBeDocumented</span>
<span class="k">annotation</span> <span class="kd">class</span> <span class="nc">Fancy</span>

</code></pre></div></div>

<p>Д╫©Г■╗ФЁ╗Х╖ёД╧÷Д╦▌javaГ╠╩Д╪╪</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nd">@Fancy</span> <span class="kd">class</span> <span class="nc">Foo</span> <span class="p">{</span>
    <span class="nd">@Fancy</span> <span class="k">fun</span> <span class="nf">baz</span><span class="p">(</span><span class="nd">@Fancy</span> <span class="n">foo</span><span class="p">:</span> <span class="nc">Int</span><span class="p">):</span> <span class="nc">Int</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span><span class="nd">@Fancy</span> <span class="mi">1</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<h3 id="heading-Е▐█Е╟└">Е▐█Е╟└</h3>

<p>kotlin Г └Е▐█Е╟└Е▓▄java Г └Д╧÷Е╬┬Г╠╩Д╪╪О╪▄Д╦█Е░▄Г └Ф≤╞ kotlin::class Х▌╥Е▐√Г └Ф≤╞kotlinФ▐░Д╬⌡Г └Г╠╩ KClass Г╠╩Е·▀О╪▄java.getClass() Х▌╥Е▐√Г └Ф≤╞javaГ └Г╠╩О╪▄Е╫⌠Г└╤ kotlin::class.java Д╧÷Х┐╫Х▌╥Е▐√Е┬╟Е░▄Ф═╥Г └Г╩⌠Ф·°</p>

<p>Е┘╤Д╩√Г └Г÷╔Х╞├Г┌╧Е░▄javaГ └Г÷╔Х╞├Г┌╧О╪▄ Ф┬▒Д╩╛Г°▀Ф╝╣Д╦╙Е╟▐demo</p>

<p>Х©≥Д╦╙demoГ └Х╕│Е╝·Г▌╟Г └Е┼÷Х┐╫О╪ </p>

<ul>
  <li>Х╞╩Е▐√И║╧Г⌡╝Ф═╧Г⌡╝Е╫∙Д╦▀Г └Ф√┤Д╩╤Е├┘Е╝╧О╪▄Е╟├Ф√┤Д╩╤Д╦╜Г └Е├┘Е╝╧И─ Х©┤Д╦─Е╝ Х╖└Ф═╪Ф≤═Е╟└Г╩≥Е╞╧Е╨■Г └Г╠╩</li>
</ul>

<p>ФЁ╗Х╖ёГ╠╩:</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Target</span><span class="p">(</span><span class="nc">AnnotationTarget</span><span class="p">.</span><span class="nc">PROPERTY</span><span class="p">)</span>
<span class="nd">@Retention</span>
<span class="k">annotation</span> <span class="kd">class</span> <span class="nc">MyAnno</span><span class="p">(</span><span class="kd">val</span> <span class="py">fileName</span><span class="p">:</span> <span class="nc">String</span> <span class="p">=</span> <span class="s">"application.properties"</span><span class="p">,</span> <span class="kd">val</span> <span class="py">propertyName</span><span class="p">:</span> <span class="nc">String</span><span class="p">)</span>
</code></pre></div></div>

<p>Х╖ёФ·░Г╠╩:</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">AnnoExpres</span><span class="p">(</span><span class="kd">val</span> <span class="py">obj</span><span class="p">:</span> <span class="nc">Any</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">init</span> <span class="p">{</span>

    <span class="p">}</span>

    <span class="k">fun</span> <span class="nf">expression</span><span class="p">()</span> <span class="p">{</span>
        <span class="kd">val</span> <span class="py">clazz</span> <span class="p">=</span> <span class="n">obj</span><span class="p">.</span><span class="n">javaClass</span><span class="p">.</span><span class="n">kotlin</span>
        <span class="n">clazz</span><span class="p">.</span><span class="n">memberProperties</span><span class="p">.</span><span class="nf">forEach</span> <span class="p">{</span> <span class="n">property</span> <span class="p">-&gt;</span>
            <span class="kd">val</span> <span class="py">mutableProp</span> <span class="p">=</span> <span class="k">try</span> <span class="p">{</span>
                <span class="n">property</span> <span class="k">as</span> <span class="nc">KMutableProperty</span><span class="p">&lt;</span><span class="err">*</span><span class="p">&gt;</span>
            <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">e</span><span class="p">:</span> <span class="nc">Exception</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">null</span>
            <span class="p">}</span> <span class="o">?:</span> <span class="k">return</span><span class="nd">@forEach</span>


            <span class="kd">val</span> <span class="py">propertyName</span> <span class="p">=</span> <span class="n">mutableProp</span><span class="p">.</span><span class="n">name</span>
            <span class="kd">val</span> <span class="py">propertyType</span> <span class="p">=</span> <span class="n">mutableProp</span><span class="p">.</span><span class="n">returnType</span><span class="p">.</span><span class="nf">toString</span><span class="p">().</span><span class="nf">removePrefix</span><span class="p">(</span><span class="s">"kotlin."</span><span class="p">)</span>

            <span class="n">mutableProp</span><span class="p">.</span><span class="n">annotations</span><span class="p">.</span><span class="nf">forEach</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">it</span> <span class="k">is</span> <span class="nc">MyAnno</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">when</span> <span class="p">(</span><span class="n">propertyType</span><span class="p">)</span> <span class="p">{</span>
                        <span class="s">"String"</span> <span class="p">-&gt;</span> <span class="n">mutableProp</span><span class="p">.</span><span class="n">setter</span><span class="p">.</span><span class="nf">call</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="nf">getFileContent</span><span class="p">(</span><span class="n">it</span><span class="p">.</span><span class="n">fileName</span><span class="p">)[</span><span class="n">propertyName</span><span class="p">]</span> <span class="o">?:</span> <span class="s">""</span><span class="p">)</span>
                        <span class="s">"Int"</span> <span class="p">-&gt;</span> <span class="n">mutableProp</span><span class="p">.</span><span class="n">setter</span><span class="p">.</span><span class="nf">call</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="nf">getFileContent</span><span class="p">(</span><span class="n">it</span><span class="p">.</span><span class="n">fileName</span><span class="p">)[</span><span class="n">propertyName</span><span class="p">]</span><span class="o">?.</span><span class="nf">toInt</span><span class="p">()</span> <span class="o">?:</span> <span class="mi">0</span><span class="p">)</span>
                        <span class="s">"Boolean"</span> <span class="p">-&gt;</span> <span class="n">mutableProp</span><span class="p">.</span><span class="n">setter</span><span class="p">.</span><span class="nf">call</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="nf">getFileContent</span><span class="p">(</span><span class="n">it</span><span class="p">.</span><span class="n">fileName</span><span class="p">)[</span><span class="n">propertyName</span><span class="p">]</span><span class="o">?.</span><span class="nf">toBoolean</span><span class="p">()</span> <span class="o">?:</span> <span class="k">false</span><span class="p">)</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">fun</span> <span class="nf">getFileContent</span><span class="p">(</span><span class="n">fileName</span><span class="p">:</span> <span class="nc">String</span><span class="p">):</span> <span class="nc">Map</span><span class="p">&lt;</span><span class="nc">String</span><span class="p">,</span> <span class="nc">String</span><span class="p">&gt;</span> <span class="p">{</span>
        <span class="kd">val</span> <span class="py">lines</span> <span class="p">=</span> <span class="nc">InputStreamReader</span><span class="p">(</span><span class="nc">AnnoExpres</span><span class="o">::</span><span class="k">class</span><span class="p">.</span><span class="n">java</span><span class="p">.</span><span class="n">classLoader</span><span class="p">.</span><span class="nf">getResourceAsStream</span><span class="p">(</span><span class="n">fileName</span><span class="p">)).</span><span class="nf">readLines</span><span class="p">()</span>

        <span class="k">return</span> <span class="n">lines</span><span class="p">.</span><span class="nf">filter</span> <span class="p">{</span>
            <span class="p">!</span><span class="nc">StringUtils</span><span class="p">.</span><span class="nf">isEmpty</span><span class="p">(</span><span class="n">it</span><span class="p">)</span>
        <span class="p">}.</span><span class="nf">filter</span> <span class="p">{</span>
            <span class="p">!</span><span class="n">it</span><span class="p">.</span><span class="nf">startsWith</span><span class="p">(</span><span class="s">"#"</span><span class="p">)</span>
        <span class="p">}.</span><span class="nf">map</span> <span class="p">{</span>
            <span class="n">it</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="s">"="</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="n">to</span> <span class="k">if</span> <span class="p">(</span><span class="n">it</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="s">"="</span><span class="p">).</span><span class="n">size</span> <span class="p">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="n">it</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="s">"="</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span> <span class="k">else</span> <span class="s">""</span>
        <span class="p">}.</span><span class="nf">toMap</span><span class="p">()</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>modelГ╠╩:</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*
 * И─ Х©┤ФЁ╗Х╖ёО╪▄Ф┬▒Д╩╛Г÷╔И│⌠ Х╞╩Е▐√application.propertiesФ√┤Д╩╤О╪▄Е╧╤Д╦■Е╟├Е╞╧Е╨■Г └Е╜≈Ф╝╣Ф≤═Е╟└Е┬╟Е╞╧Е╨■Г └Е╠·Ф─╖Д╦┼
 */</span>
<span class="kd">class</span> <span class="nc">User</span> <span class="p">{</span>
    <span class="nd">@MyAnno</span><span class="p">(</span><span class="n">propertyName</span> <span class="p">=</span> <span class="s">"name"</span><span class="p">)</span> <span class="kd">var</span> <span class="py">name</span><span class="p">:</span> <span class="nc">String</span> <span class="p">=</span> <span class="s">""</span>
    <span class="nd">@MyAnno</span><span class="p">(</span><span class="n">propertyName</span> <span class="p">=</span> <span class="s">"age"</span><span class="p">)</span> <span class="kd">var</span> <span class="py">age</span><span class="p">:</span> <span class="nc">Int</span> <span class="p">=</span> <span class="mi">0</span>
    <span class="nd">@MyAnno</span><span class="p">(</span><span class="n">propertyName</span> <span class="p">=</span> <span class="s">"man"</span><span class="p">)</span> <span class="kd">var</span> <span class="py">man</span><span class="p">:</span> <span class="nc">Boolean</span> <span class="p">=</span> <span class="k">false</span>

    <span class="k">override</span> <span class="k">fun</span> <span class="nf">toString</span><span class="p">():</span> <span class="nc">String</span> <span class="p">{</span>
        <span class="k">return</span> <span class="s">"User(name='$name', age=$age, man='$man')"</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Main:</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fun</span> <span class="nf">main</span><span class="p">(</span><span class="n">args</span><span class="p">:</span> <span class="nc">Array</span><span class="p">&lt;</span><span class="nc">String</span><span class="p">&gt;)</span> <span class="p">{</span>
    <span class="kd">val</span> <span class="py">user</span> <span class="p">=</span> <span class="nc">User</span><span class="p">()</span>
    <span class="kd">val</span> <span class="py">anno</span> <span class="p">=</span> <span class="nc">AnnoExpres</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
    <span class="n">anno</span><span class="p">.</span><span class="nf">expression</span><span class="p">()</span>
    <span class="nf">println</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<p>application.properties Ф√┤Д╩╤Е├┘Е╝╧:</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">#</span> <span class="n">test</span>
<span class="n">name</span><span class="p">=</span><span class="s">"zhangjie"</span>
<span class="n">age</span><span class="p">=</span><span class="mi">23</span>
<span class="n">man</span><span class="p">=</span><span class="k">true</span>
</code></pre></div></div>

<p>Д╦▀И²╒Ф≤╞Х©░Х║▄Г╩⌠Ф·°</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nc">User</span><span class="p">(</span><span class="n">name</span><span class="p">=</span><span class="err">'</span><span class="s">"zhangjie"</span><span class="err">'</span><span class="p">,</span> <span class="n">age</span><span class="p">=</span><span class="mi">23</span><span class="p">,</span> <span class="n">man</span><span class="p">=</span><span class="err">'</span><span class="k">true</span><span class="err">'</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="heading-Ф─╩Г╩⌠">Ф─╩Г╩⌠</h2>

<p>И ▐Г²─Е╞╧kotlinГ └Ф╥╠Е┘╔О╪▄ Х╤┼Ф²╔Х╤┼Ф└÷Х╖┴kotlinЕ┐▐Ф≤╞javaГ └Х╞╜ФЁ∙ГЁ√О╪▄Д╧÷Е▐╞Х┐╫Ф≤╞Е⌡═Д╦╨Е┬²Е╜╕Х─┘Г └Е▌÷Е⌡═О╪▄Е╞╧kotlinГ └Х╝╬Х╝║Г░├Е©╣Х©≤Д╦█Д╨├Х╖ёО╪▄Д╦█Х©┤Ф≈╒Г└╤javaД╦▌kotlinИ┐╫Е▐╞Д╩╔Х╣╥Е┬╟Г⌡╦Е░▄Г └Д╫°Г■╗О╪▄Е╝·Г▌╟Г⌡╦Е░▄Г └Д╦°Х╔©О╪▄Е╟╠Г╝≈Ф≤╞Х╞╜ФЁ∙ГЁ√О╪▄Ф┬▒Д╩╛Д╦╨Д╩─Д╧┬Д╦█И─┌Г■╗Ф⌡╢Ф√╧Д╬©Г╝─Ф╢│Г └Х╞╜ФЁ∙ГЁ√Е▒╒О╪÷ Ф┬▒Д╧÷Ф┴⌠Г╝≈Е°╗Ф≈╔Е╦╦Д╩ёГ═│Д╦╜Е┼═Е┘╔Е╞╧kotlinГ └Д╫©Г■╗О╪▄Д╫├Д╧÷Д╦█Д╪ Ф■╬Е╪┐Е╞╧javaГ └Ф╥╠Е┘╔О╪▄Е⌡═Д╦╨Е╔╧Д╩╛И┐╫Х╥▒Е°╗JVMД╦┼О╫·</p>

<p>Д╦▀И²╒Ф┬▒Д╩╛Г°▀Д╦─Ф╝╣Г■╗kotlinЕ├≥Е┤╨Ф²╔Г └Д╩ёГ═│О╪▄Е▐╙Г°▀Е╓√Х╖┌Е▓▄Е├≥Д╫°Ф└÷Е▐≈Ф²╔Х╝╡Г └Х╞²О╪▄Д╦█Х╖┴Е╬≈Е╬┬Г┬╫Д╧┬О╪÷</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nn">com.example.html.*</span> <span class="c1">// Е┘╥Д╫⌠Г └Её╟Ф≤▌Е▐┌Х╖│Д╦▀Ф√┤</span>

<span class="k">fun</span> <span class="nf">result</span><span class="p">(</span><span class="n">args</span><span class="p">:</span> <span class="nc">Array</span><span class="p">&lt;</span><span class="nc">String</span><span class="p">&gt;)</span> <span class="p">=</span>
    <span class="nf">html</span> <span class="p">{</span>
        <span class="nf">head</span> <span class="p">{</span>
            <span class="nf">title</span> <span class="p">{+</span><span class="s">"XML encoding with Kotlin"</span><span class="p">}</span>
        <span class="p">}</span>
        <span class="nf">body</span> <span class="p">{</span>
            <span class="nf">h1</span> <span class="p">{+</span><span class="s">"XML encoding with Kotlin"</span><span class="p">}</span>
            <span class="nf">p</span>  <span class="p">{+</span><span class="s">"this format can be used as an alternative markup to XML"</span><span class="p">}</span>

            <span class="c1">// Д╦─Д╦╙Е┘┐Г╢═, Ф▄┤Е╝ Д╨├Е╠·Ф─╖, Х©≤Ф▄┤Е╝ Д╨├Е┘╤Д╦╜Г └Ф√┤Ф°╛Е├┘Е╝╧</span>
            <span class="nf">a</span><span class="p">(</span><span class="n">href</span> <span class="p">=</span> <span class="s">"http://kotlinlang.org"</span><span class="p">)</span> <span class="p">{+</span><span class="s">"Kotlin"</span><span class="p">}</span>

            <span class="c1">// Ф╥╥Е░┬Е├┘Е╝╧</span>
            <span class="nf">p</span> <span class="p">{</span>
                <span class="p">+</span><span class="s">"This is some"</span>
                <span class="nf">b</span> <span class="p">{+</span><span class="s">"mixed"</span><span class="p">}</span>
                <span class="p">+</span><span class="s">"text. For more see the"</span>
                <span class="nf">a</span><span class="p">(</span><span class="n">href</span> <span class="p">=</span> <span class="s">"http://kotlinlang.org"</span><span class="p">)</span> <span class="p">{+</span><span class="s">"Kotlin"</span><span class="p">}</span>
                <span class="p">+</span><span class="s">"project"</span>
            <span class="p">}</span>
            <span class="nf">p</span> <span class="p">{+</span><span class="s">"some text"</span><span class="p">}</span>

            <span class="c1">// Г■╠Г╗▀Е╨▐Г■÷Ф┬░Г └Е├┘Е╝╧</span>
            <span class="nf">p</span> <span class="p">{</span>
                <span class="k">for</span> <span class="p">(</span><span class="n">arg</span> <span class="k">in</span> <span class="n">args</span><span class="p">)</span>
                    <span class="p">+</span><span class="n">arg</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>
:ET