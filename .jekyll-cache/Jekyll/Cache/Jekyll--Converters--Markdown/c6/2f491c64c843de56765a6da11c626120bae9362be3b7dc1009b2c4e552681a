I"o <ul class="toc" id="markdown-toc">
  <li><a href="#heading-jenkins-安装-与-使用" id="markdown-toc-heading-jenkins-安装-与-使用">Jenkins 安装 与 使用</a>    <ul>
      <li><a href="#heading-jenkins介绍" id="markdown-toc-heading-jenkins介绍">Jenkins介绍</a>        <ul>
          <li><a href="#heading-wikipedia" id="markdown-toc-heading-wikipedia">wikipedia</a></li>
          <li><a href="#heading-ibm" id="markdown-toc-heading-ibm">IBM</a></li>
          <li><a href="#heading-my" id="markdown-toc-heading-my">MY</a></li>
        </ul>
      </li>
      <li><a href="#heading-简单使用" id="markdown-toc-heading-简单使用">简单使用</a>        <ul>
          <li><a href="#heading-相关信息" id="markdown-toc-heading-相关信息">相关信息</a></li>
        </ul>
      </li>
      <li><a href="#heading-安装" id="markdown-toc-heading-安装">安装</a>        <ul>
          <li><a href="#heading-安装jenkins" id="markdown-toc-heading-安装jenkins">安装jenkins</a></li>
          <li><a href="#heading-配置jenkins-和-github" id="markdown-toc-heading-配置jenkins-和-github">配置jenkins 和 github</a></li>
          <li><a href="#heading-全局配置" id="markdown-toc-heading-全局配置">全局配置</a></li>
          <li><a href="#heading-新建job" id="markdown-toc-heading-新建job">新建job</a></li>
          <li><a href="#heading-最后一步" id="markdown-toc-heading-最后一步">最后一步</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h1 id="heading-jenkins-安装-与-使用">Jenkins 安装 与 使用</h1>

<p>一直对jenkins都只是听说过，没用过， 最近因为在了解公司的发布系统，发现很多好用的工具，如Jenkins，supervisor等，今天我们对jenkins进行安装，并且实现自动github push 代码的时候自动做一些处理（当然你可以理解为ci）</p>

<h2 id="heading-jenkins介绍">Jenkins介绍</h2>

<p>可能有些同学也是第一次接触jenkins，或者还没有接触，想要了解下，我这里翻了很多的文章，找到了个对jenkins比较好理解的定义</p>

<h3 id="heading-wikipedia">wikipedia</h3>

<p>这里引用下<a href="https://zh.wikipedia.org/wiki/Jenkins_(%E8%BD%AF%E4%BB%B6)">维基百科</a>对jenkins的介绍:</p>

<ul>
  <li>Jenkins是一个用Java编写的开源的持续集成工具。在与Oracle发生争执后，项目从Hudson项目复刻。</li>
  <li>Jenkins提供了软件开发的持续集成服务。</li>
  <li>它运行在Servlet容器中（例如Apache Tomcat）。它支持软件配置管理（SCM）工具（包括AccuRev SCM、CVS、Subversion、Git、Perforce、Clearcase和RTC），可以执行基于Apache Ant和Apache Maven的项目，以及任意的Shell脚本和Windows批处理命令。Jenkins的主要开发者是川口耕介。</li>
  <li>Jenkins是在MIT许可证下发布的自由软件。</li>
  <li>通过各种手段触发构建。例如提交给版本控制系统时被触发，也可以通过类似Cron的机制调度，也可以在其他的构建已经完成时，还可以通过一个特定的URL进行请求。</li>
</ul>

<h3 id="heading-ibm">IBM</h3>

<p>这里是<a href="https://www.ibm.com/developerworks/cn/java/j-lo-jenkins/">IBM</a>里对jenkins的描述，里面还对<strong>持续集成</strong>做了概述</p>

<p>Jenkins 是一个开源项目，提供了一种易于使用的持续集成系统，使开发者从繁杂的集成中解脱出来，专注于更为重要的业务逻辑实现上。同时 Jenkins 能实施监控集成中存在的错误，提供详细的日志文件和提醒功能，还能用图表的形式形象地展示项目构建的趋势和稳定性。下面将介绍 Jenkins 的基本功能。</p>

<h3 id="heading-my">MY</h3>

<p>在网上找了些对jenkins的介绍，并且加之以往对jenkins的见识，于我的大脑中，jenkins所作的便是  对每次仓库代码的操作，它会把代码拉到服务器上，根据配置执行特定脚本然后将操作的每一步都以详细的日志方式在web界面中展示出来。</p>

<p>因为可以配置执行脚本，所以我们便有可能在不进入服务器的情况下对服务器进行操作，并且看到具体的操作结果。</p>

<h2 id="heading-简单使用">简单使用</h2>

<p>好吧，了解了这个东西是干什么的，我们便进行初始的安装吧～</p>

<h3 id="heading-相关信息">相关信息</h3>

<p>系统配置</p>

<ul>
  <li>CentOS 6.8 64bit</li>
  <li>1 核心</li>
  <li>1G 内存</li>
</ul>

<p>Jenkins</p>

<ul>
  <li>jenkins-2.73.1-1.1.noarch</li>
</ul>

<h2 id="heading-安装">安装</h2>

<h3 id="heading-安装jenkins">安装jenkins</h3>

<p>安装java环境:</p>

<p><code class="language-plaintext highlighter-rouge">yum install java</code></p>

<p>配置jenkins库</p>

<p><code class="language-plaintext highlighter-rouge">sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</code></p>

<p><code class="language-plaintext highlighter-rouge">sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</code></p>

<blockquote>
  <p>如果没有wget 请先安装 <code class="language-plaintext highlighter-rouge">yum install wgety</code></p>
</blockquote>

<p>安装jenkins</p>

<p><code class="language-plaintext highlighter-rouge">yum install jenkins</code></p>

<p>启动jenkins</p>

<p><code class="language-plaintext highlighter-rouge">sudo service jenkins start</code></p>

<h3 id="heading-配置jenkins-和-github">配置jenkins 和 github</h3>

<p><code class="language-plaintext highlighter-rouge">http://&lt;your ip&gt;:8080</code></p>

<h4 id="heading-初始化">初始化</h4>

<p>1.</p>

<p><img src="/files/images/j1.png" alt="1" /></p>

<blockquote>
  <p>将给出路径下文件内的初始化码填进来</p>
</blockquote>

<p>2.</p>

<p><img src="/files/images/j2.png" alt="2" /></p>

<blockquote>
  <p>选择推荐插件安装，这里安装了些默认的插件</p>
</blockquote>

<p>3.</p>

<p><img src="/files/images/j3.png" alt="3" /></p>

<h3 id="heading-全局配置">全局配置</h3>

<blockquote>
  <p>我们转到github上，获取个tocken， 因为jenkins需要tocken作webhook认证</p>
</blockquote>

<p>1.</p>

<p><img src="/files/images/j19.png" alt="5" /></p>

<p>2.</p>

<p><img src="/files/images/j20.png" alt="6" /></p>

<p>3.</p>

<p><img src="/files/images/j20.png" alt="7" /></p>

<p>4.</p>

<p><img src="/files/images/j21.png" alt="8" /></p>

<blockquote>
  <p>然后我们配置下 jenkins 对 github 支持的全局变量 (为webhook 做准备)</p>
</blockquote>

<p>6.</p>

<p><img src="/files/images/j17.png" alt="4" /></p>

<p>7.</p>

<p><img src="/files/images/j22.png" alt="9" /></p>

<p>8.</p>

<p><img src="/files/images/j24.png" alt="9" /></p>

<h3 id="heading-新建job">新建job</h3>

<blockquote>
  <p>我们新建个新的job， 做下对应的配置，这样当代码push到GitHub上的时候便会自动触发jenkins, 执行我们配置好的脚本文件</p>
</blockquote>

<p>1.</p>

<p><img src="/files/images/j4.png" alt="jenkins" /></p>

<p><img src="/files/images/j12.png" alt="jenkins" /></p>

<p><img src="/files/images/j13.png" alt="jenkins" /></p>

<p><img src="/files/images/j14.png" alt="jenkins" /></p>

<p><img src="/files/images/j15.png" alt="jenkins" /></p>

<p><img src="/files/images/j16.png" alt="jenkins" /></p>

<blockquote>
  <p>这里的 WORKSPACE 便是 git clone 下来的项目根目录  <br />
这里的构建脚本是 执行 项目根目录下的 ci.sh</p>
</blockquote>

<p>我们看下 ci.sh 文件内容</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>echo "start.sh is runing"
var1=11

while [ $var1 -gt 1 ]
  do
    var1=$[$var1 - 1]
    echo "hello world $var1"

    done

echo "end start.sh"
</code></pre></div></div>

<h3 id="heading-最后一步">最后一步</h3>

<p>最后，我们在GitHub的项目上配置webhook</p>

<p><img src="/files/images/j23.png" alt="jenkins" /></p>

<p>好，我们开始push文件到GitHub的项目下</p>

<p><img src="/files/images/j25.png" alt="jenkins" /></p>

<p><img src="/files/images/j26.png" alt="jenkins" /></p>

<p>这里，我们发现已经触发jenkins并且成功运行了ci.sh</p>
:ET